{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ismet\\\\Desktop\\\\workproject\\\\src\\\\components\\\\LogIn\\\\LogIn.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport LayOut from '../../layouts/LayoutFile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LogIn = () => {\n  _s();\n\n  // const {\n  //     register,\n  //     handleSubmit,\n  //     formState: { errors },\n  // } = React.useForm()\n  // const onSubmit = (data) => {\n  //     const userData = JSON.parse(localStorage.getItem(data.email))\n  //     if(userData) {\n  //         if(userData.password === data.password) {\n  //             console.log(userData.name + \"You are successesfully Logged in\")\n  //         } else {\n  //             console.log(\"Email or Password is incorrect\")\n  //         }\n  //     } else {\n  //         console.log(\"Email or password is incorrect\")\n  //     }\n  // }\n  // return(\n  //     <>\n  //         <p>Login Form</p>\n  //         <form onSubmit={handleSubmit(onSubmit)}>\n  //             <input type=\"email\" {...register(\"email\", { required: true})} />\n  //             {errors.email && <span>*Email* is mandatory</span>}\n  //             <input type=\"password\" {...register(\"password\")} />\n  //             <input type={\"submit\"} />\n  //         </form>\n  //     </>\n  // )\n  const [errorMessages, setErrorMessages] = useState({});\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const database = [{\n    username: \"user1\",\n    password: \"pass1\"\n  }, {\n    username: \"user2\",\n    password: \"pass2\"\n  }];\n  const errors = {\n    uname: \"invalid username\",\n    pass: \"invalid password\"\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    var {\n      uname,\n      pass\n    } = document.forms[0];\n    const userData = database.find(user => user.username === uname.value);\n\n    if (userData) {\n      if (userData.password !== pass.value) {\n        setErrorMessages({\n          name: \"pass\",\n          message: errors.pass\n        });\n      } else {\n        setIsSubmitted(true);\n      }\n    } else {\n      setErrorMessages({\n        name: \"uname\",\n        message: errors.uname\n      });\n    }\n  };\n\n  const renderErrorMessage = name => name === errorMessages.name && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: errorMessages.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 13\n  }, this);\n\n  const renderForm = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"uname\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), renderErrorMessage(\"uname\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"pass\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), renderErrorMessage(\"pass\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), isSubmitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"User is successfully logged in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 32\n      }, this) : renderForm]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this); //     const [user, setUser] = React.useState(null);\n  //     const handleLogin = () => setUser({ id: '1', name: 'robin' });\n  //     const handleLogout = () => setUser(null);\n  //     return (\n  //         <>\n  //             {\n  //                 user ? (\n  //                     <button onClick={handleLogout} > Sign Out</button>\n  //                 ) : (\n  //                     <button onClick={handleLogin}>Sign In</button>\n  //                 )\n  //             }\n  //         </>\n  //     )\n  // const [user, setUser] = useState(\"\")\n  // const auth = useAuth()\n  // const navigate = useNavigate()\n  // const handleLogin = () => {\n  //     auth.login(user)\n  //     navigate('/my-account')\n  // }\n  // return (\n  //     <div>\n  //         <label>\n  //             Username: {' '}\n  //             <input type=\"text\" onChange={(e) => setUser(e.target.value)} />\n  //         </label>\n  //         <button onClick={handleLogin}>LogIn</button>\n  //     </div>\n  // )\n};\n\n_s(LogIn, \"xHac37XC1FUyoDun112aRZB/AH4=\");\n\n_c = LogIn;\nexport default _c2 = LayOut(LogIn);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LogIn\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Ismet/Desktop/workproject/src/components/LogIn/LogIn.jsx"],"names":["React","useState","useNavigate","LayOut","LogIn","errorMessages","setErrorMessages","isSubmitted","setIsSubmitted","database","username","password","errors","uname","pass","handleSubmit","event","preventDefault","document","forms","userData","find","user","value","name","message","renderErrorMessage","renderForm"],"mappings":"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","sourcesContent":["import { React, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport LayOut from '../../layouts/LayoutFile'\r\nconst LogIn = () => {\r\n\r\n    // const {\r\n    //     register,\r\n    //     handleSubmit,\r\n    //     formState: { errors },\r\n    // } = React.useForm()\r\n\r\n    // const onSubmit = (data) => {\r\n    //     const userData = JSON.parse(localStorage.getItem(data.email))\r\n    //     if(userData) {\r\n    //         if(userData.password === data.password) {\r\n    //             console.log(userData.name + \"You are successesfully Logged in\")\r\n    //         } else {\r\n    //             console.log(\"Email or Password is incorrect\")\r\n    //         }\r\n    //     } else {\r\n    //         console.log(\"Email or password is incorrect\")\r\n    //     }\r\n    // }\r\n    // return(\r\n    //     <>\r\n    //         <p>Login Form</p>\r\n\r\n    //         <form onSubmit={handleSubmit(onSubmit)}>\r\n    //             <input type=\"email\" {...register(\"email\", { required: true})} />\r\n    //             {errors.email && <span>*Email* is mandatory</span>}\r\n    //             <input type=\"password\" {...register(\"password\")} />\r\n    //             <input type={\"submit\"} />\r\n    //         </form>\r\n    //     </>\r\n    // )\r\n\r\n    const [errorMessages, setErrorMessages] = useState({});\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n    const database = [\r\n        {\r\n            username: \"user1\",\r\n            password: \"pass1\"\r\n        },\r\n        {\r\n            username: \"user2\",\r\n            password: \"pass2\"\r\n        }\r\n    ];\r\n\r\n    const errors = {\r\n        uname: \"invalid username\",\r\n        pass: \"invalid password\"\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        var { uname, pass } = document.forms[0];\r\n\r\n\r\n        const userData = database.find((user) => user.username === uname.value);\r\n\r\n\r\n        if (userData) {\r\n            if (userData.password !== pass.value) {\r\n                setErrorMessages({ name: \"pass\", message: errors.pass });\r\n            } else {\r\n                setIsSubmitted(true);\r\n            }\r\n        } else {\r\n            setErrorMessages({ name: \"uname\", message: errors.uname });\r\n        }\r\n    };\r\n\r\n\r\n    const renderErrorMessage = (name) =>\r\n        name === errorMessages.name && (\r\n            <div className=\"error\">{errorMessages.message}</div>\r\n        );\r\n\r\n\r\n    const renderForm = (\r\n        <div className=\"form\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"input-container\">\r\n                    <label>Username </label>\r\n                    <input type=\"text\" name=\"uname\" required />\r\n                    {renderErrorMessage(\"uname\")}\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Password </label>\r\n                    <input type=\"password\" name=\"pass\" required />\r\n                    {renderErrorMessage(\"pass\")}\r\n                </div>\r\n                <div className=\"button-container\">\r\n                    <input type=\"submit\" />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <div className=\"login-form\">\r\n                <div className=\"title\">Sign In</div>\r\n                {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n\r\n    //     const [user, setUser] = React.useState(null);\r\n\r\n    //     const handleLogin = () => setUser({ id: '1', name: 'robin' });\r\n    //     const handleLogout = () => setUser(null);\r\n    //     return (\r\n    //         <>\r\n    //             {\r\n    //                 user ? (\r\n    //                     <button onClick={handleLogout} > Sign Out</button>\r\n    //                 ) : (\r\n    //                     <button onClick={handleLogin}>Sign In</button>\r\n    //                 )\r\n    //             }\r\n    //         </>\r\n    //     )\r\n    // const [user, setUser] = useState(\"\")\r\n    // const auth = useAuth()\r\n    // const navigate = useNavigate()\r\n    // const handleLogin = () => {\r\n    //     auth.login(user)\r\n    //     navigate('/my-account')\r\n    // }\r\n    // return (\r\n    //     <div>\r\n    //         <label>\r\n    //             Username: {' '}\r\n    //             <input type=\"text\" onChange={(e) => setUser(e.target.value)} />\r\n    //         </label>\r\n    //         <button onClick={handleLogin}>LogIn</button>\r\n    //     </div>\r\n    // )\r\n}\r\n\r\nexport default LayOut(LogIn)"]},"metadata":{},"sourceType":"module"}