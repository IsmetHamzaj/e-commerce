{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ismet\\\\Desktop\\\\workproject\\\\src\\\\components\\\\Register\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport LayOut from '../../layouts/LayoutFile'; // import useForm from './useForm'\n// import ValidateInfo from './validateInfo'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [submitted, setSubmitted] = useState(false);\n  const [error, setError] = useState(false);\n\n  const handleName = e => {\n    setName(e.target.value);\n    setSubmitted(false);\n  };\n\n  const handleEmail = e => {\n    setEmail(e.target.value);\n    setSubmitted(false);\n  };\n\n  const handlePassword = e => {\n    setPassword(e.target.value);\n    setSubmitted(false);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (name === '' || email === '' || password === '') {\n      setError(true);\n    } else {\n      setSubmitted(true);\n      setError(false);\n    }\n  };\n\n  const successMessage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success\",\n      style: {\n        display: submitted ? '' : 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"User \", name, \" successesfully logged in\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  };\n\n  const errorMessage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      style: {\n        display: error ? '' : 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Please enter all the fields\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  };\n\n  const handleChanges = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"User Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: [errorMessage(), successMessage()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleName,\n        className: \"input\",\n        value: name,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleEmail,\n        className: \"input\",\n        value: email,\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handlePassword,\n        value: password,\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this); // const { handleChanges, values, handleSubmit, errors } = useForm(ValidateInfo);\n  // return (\n  //     <div>\n  //         <form>\n  //             <div>\n  //                 <label htmlFor='email'>Email:\n  //                     <input id='email' type=\"email\" name=\"email\" placeholder='Enter your email' value={values.email} onChange={handleChanges} />\n  //                 </label>\n  //             </div>\n  //             {errors.email && <p>{errors.email}</p>}\n  //             <div>\n  //                 <label htmlFor='password'>Password:\n  //                     <input id='password' type=\"password\" name=\"password\" placeholder='Enter your password' value={values.password} onChange={handleChanges} />\n  //                 </label>\n  //             </div>\n  //             {errors.password && <p>{errors.password}</p>}\n  //             <div>\n  //                 <label htmlFor='name'>Name:\n  //                     <input id='name' type=\"text\" name=\"name\" placeholder='Enter your name' value={values.name} onChange={handleChanges} />\n  //                 </label>\n  //             </div>\n  //             {errors.name && <p>{errors.name}</p>}\n  //             <div>\n  //                 <label htmlFor='lastname'>Last Name:\n  //                     <input id='lastname' type=\"text\" name=\"lastname\" placeholder='Enter your last name' value={values.lastname} onChange={handleChanges} />\n  //                 </label>\n  //             </div>\n  //             {errors.lastname && <p>{errors.lastname}</p>}\n  //             <div>\n  //                 <button type='submit'>Register</button>\n  //                 <span>Already have an account? Login <a href='#'>here</a></span>\n  //             </div>\n  //         </form>\n  //     </div>\n  // )\n  //     const {register, handleSubmit, formState: { errors }} = useForm();\n  //     const onSubmit = (data) => console.log(data)\n  //     return (\n  //         <>\n  //             <p>Register form</p>\n  //             <form>\n  //                 <input type=\"text\" {...register(\"name\")} />\n  //                 <input type=\"email\" {...register(\"email\", {required: true})} />\n  //                 {errors.email && <span>*Email* is mandat    ory</span>}\n  //                 <input type=\"password\" {...register(\"password\")}/>\n  //                 <input type={\"submit\"} />\n  //             </form>\n  //         </>\n  //     )\n};\n\n_s(Register, \"CkEWUu6kiVYszNfmZ6Lg00C0uz0=\");\n\n_c = Register;\nexport default _c2 = LayOut(Register);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Register\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Ismet/Desktop/workproject/src/components/Register/Register.jsx"],"names":["React","useState","useForm","LayOut","Register","name","setName","email","setEmail","password","setPassword","submitted","setSubmitted","error","setError","handleName","e","target","value","handleEmail","handlePassword","handleSubmit","preventDefault","successMessage","display","errorMessage","handleChanges"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useState } from 'react';\r\nimport { useForm } from 'react-hook-form'\r\nimport LayOut from '../../layouts/LayoutFile';\r\n// import useForm from './useForm'\r\n// import ValidateInfo from './validateInfo'\r\nconst Register = () => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const [submitted, setSubmitted] = useState(false)\r\n    const [error, setError] = useState(false)\r\n\r\n    const handleName = (e) => {\r\n        setName(e.target.value)\r\n        setSubmitted(false)\r\n    }\r\n\r\n    const handleEmail = (e) => {\r\n        setEmail(e.target.value)\r\n        setSubmitted(false)\r\n    }\r\n\r\n    const handlePassword = (e) => {\r\n        setPassword(e.target.value)\r\n        setSubmitted(false)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if( name === '' || email === '' || password === '') {\r\n            setError(true)\r\n        } else {\r\n            setSubmitted(true)\r\n            setError(false)\r\n        }\r\n    }\r\n\r\n    const successMessage = () => {\r\n        return(\r\n            <div className='success' style={{display: submitted ? '' : 'none'}}>\r\n                <h1>User {name} successesfully logged in</h1>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const errorMessage = () => {\r\n        return(\r\n            <div className='error' style={{display: error ? '' : 'none'}}>\r\n                <h1>Please enter all the fields</h1>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleChanges = () => {};\r\n\r\n    return(\r\n        <div>\r\n            <div className='form'>\r\n                <h1>User Registration</h1>\r\n            </div>\r\n            <div className='messages'>\r\n                {errorMessage()}\r\n                {successMessage()}\r\n            </div>\r\n            <form>\r\n                <label className='label'>Name</label>\r\n                <input onChange={handleName} className=\"input\" value={name} type=\"text\" />\r\n\r\n                <label className='label'>Email</label>\r\n                <input onChange={handleEmail} className=\"input\" value={email} type=\"email\" />\r\n\r\n                <label className=''>Password</label>\r\n                <input onChange={handlePassword} value={password} type=\"password\" />\r\n\r\n                <button onClick={handleSubmit} type=\"submit\">Submit</button>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n\r\n\r\n    // const { handleChanges, values, handleSubmit, errors } = useForm(ValidateInfo);\r\n\r\n    // return (\r\n    //     <div>\r\n    //         <form>\r\n    //             <div>\r\n    //                 <label htmlFor='email'>Email:\r\n    //                     <input id='email' type=\"email\" name=\"email\" placeholder='Enter your email' value={values.email} onChange={handleChanges} />\r\n    //                 </label>\r\n    //             </div>\r\n    //             {errors.email && <p>{errors.email}</p>}\r\n    //             <div>\r\n    //                 <label htmlFor='password'>Password:\r\n    //                     <input id='password' type=\"password\" name=\"password\" placeholder='Enter your password' value={values.password} onChange={handleChanges} />\r\n    //                 </label>\r\n    //             </div>\r\n    //             {errors.password && <p>{errors.password}</p>}\r\n    //             <div>\r\n    //                 <label htmlFor='name'>Name:\r\n    //                     <input id='name' type=\"text\" name=\"name\" placeholder='Enter your name' value={values.name} onChange={handleChanges} />\r\n    //                 </label>\r\n    //             </div>\r\n    //             {errors.name && <p>{errors.name}</p>}\r\n    //             <div>\r\n    //                 <label htmlFor='lastname'>Last Name:\r\n    //                     <input id='lastname' type=\"text\" name=\"lastname\" placeholder='Enter your last name' value={values.lastname} onChange={handleChanges} />\r\n    //                 </label>\r\n    //             </div>\r\n    //             {errors.lastname && <p>{errors.lastname}</p>}\r\n    //             <div>\r\n    //                 <button type='submit'>Register</button>\r\n    //                 <span>Already have an account? Login <a href='#'>here</a></span>\r\n    //             </div>\r\n    //         </form>\r\n    //     </div>\r\n    // )\r\n    //     const {register, handleSubmit, formState: { errors }} = useForm();\r\n\r\n    //     const onSubmit = (data) => console.log(data)\r\n\r\n    //     return (\r\n    //         <>\r\n    //             <p>Register form</p>\r\n    //             <form>\r\n    //                 <input type=\"text\" {...register(\"name\")} />\r\n    //                 <input type=\"email\" {...register(\"email\", {required: true})} />\r\n    //                 {errors.email && <span>*Email* is mandat    ory</span>}\r\n    //                 <input type=\"password\" {...register(\"password\")}/>\r\n    //                 <input type={\"submit\"} />\r\n    //             </form>\r\n    //         </>\r\n    //     )\r\n}\r\n\r\nexport default LayOut(Register)"]},"metadata":{},"sourceType":"module"}